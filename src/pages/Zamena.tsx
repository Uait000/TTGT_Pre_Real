import { useEffect, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Download } from 'lucide-react';

const Zamena = () => {
  const wsRef = useRef<WebSocket | null>(null);

  useEffect(() => {
    const connectWebSocket = () => {
      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
      const wsUrl = `${protocol}//${window.location.host}/websocket/`;

      try {
        const socket = new WebSocket(wsUrl);
        wsRef.current = socket;

        socket.onopen = () => {
          console.log('WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω');
        };

        socket.onmessage = (event) => {
          try {
            const data = JSON.parse(event.data);

            switch (data.type) {
              case 'updateStats':
                const onlineCounter = document.getElementById('online-counter');
                if (onlineCounter) {
                  onlineCounter.innerText = data.online;
                }
                break;

              case 'newPost':
                console.log('New Post received:', data.IncompletePost);
                break;

              case 'removePost':
                console.log('Post Removed:', data.ID);
                break;

              default:
                console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:', data.type);
            }
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
          }
        };

        socket.onerror = (error) => {
          console.error('WebSocket Error:', error);
        };

        socket.onclose = () => {
          console.log('WebSocket –æ—Ç–∫–ª—é—á–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...');
          setTimeout(connectWebSocket, 5000);
        };
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è WebSocket:', error);
        setTimeout(connectWebSocket, 5000);
      }
    };

    connectWebSocket();

    return () => {
      if (wsRef.current) {
        wsRef.current.close();
      }
    };
  }, []);

  const handleDownload = () => {
    window.open('https://ttgt.org/images/pdf/zamena.pdf', '_blank');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 py-8">
        <div className="content-wrapper">
          <h1 className="text-3xl font-bold text-gray-900 mb-6">–ó–∞–º–µ–Ω—ã</h1>

          <div className="download-section bg-white rounded-lg shadow-md p-6 mb-6 border-l-4 border-blue-600">
            <div className="flex flex-col md:flex-row items-center justify-between gap-6">
              <div className="flex-1">
                <h2 className="text-xl font-semibold text-gray-800 mb-2">
                  –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
                </h2>
                <p className="text-gray-600 mb-4">
                  –ü–æ–ª—É—á–∏—Ç–µ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏ –∑–∞–º–µ–Ω–∞–º –Ω–∞ –≤–∞—à–µ–º –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
                </p>
                <Button
                  onClick={handleDownload}
                  className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-md flex items-center gap-2 transition-colors"
                >
                  <Download className="w-5 h-5" />
                  –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                </Button>
              </div>

              <div className="qr-placeholder bg-gray-100 rounded-lg p-4 border-2 border-dashed border-gray-300">
                <div className="w-40 h-40 flex items-center justify-center text-gray-400">
                  <div className="text-center">
                    <div className="text-4xl mb-2">üì±</div>
                    <div className="text-xs">QR-–∫–æ–¥</div>
                    <div className="text-xs">–¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="pdf-viewer-section bg-white rounded-lg shadow-md p-4">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">
              –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ–Ω
            </h2>
            <div className="pdf-container">
              <iframe
                src="https://ttgt.org/images/pdf/zamena.pdf"
                className="w-full h-[800px] border-0 rounded"
                title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ–Ω"
              />
            </div>
          </div>

          <div className="mt-4 text-sm text-gray-500 text-center">
            <p>
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞ PDF –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç—É
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Zamena;
